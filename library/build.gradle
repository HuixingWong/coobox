apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.jetbrains.dokka'
apply from: "publisher.gradle"

def getVersionInfo() {
    def versionInfo = new groovy.json.JsonSlurper().parse(new File(projectDir, "dep_version.json"))
    println versionInfo
    return versionInfo["coobox"]
}

android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        kotlinOptions.freeCompilerArgs += ['-module-name', "com.secoo.library.coobox"]
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    afterEvaluate {
        publishing {
            publications {
                // Creates a Maven publication called "release".
                release(MavenPublication) {
                    // Applies the component for the release build variant.
                    from components.release

                    // You can then customize attributes of the publication as shown below.
                    groupId = 'com.secoo.library'
                    artifactId = 'coobox'
                    version = getVersionInfo()
                }
            }
        }
    }

    dokkaHtml {
        outputDirectory.set(new File(rootDir, "dokkadocs"))
        // Set module name displayed in the final output
        moduleName.set("library")

        dokkaSourceSets {
            configureEach { // Or source set name, for single-platform the default source sets are `main` and `test`

                includes.from("package-info/com.secoo.coobox.library.impl.md", "package-info/com.secoo.coobox.library.alias.type.md")

                // Used to remove a source set from documentation, test source sets are suppressed by default
                suppress.set(false)

                // Use to include or exclude non public members
                includeNonPublic.set(true)

                // Do not output deprecated members. Applies globally, can be overridden by packageOptions
                skipDeprecated.set(true)

                // Emit warnings about not documented members. Applies globally, also can be overridden by packageOptions
                reportUndocumented.set(true)

                // Do not create index pages for empty packages
                skipEmptyPackages.set(true)

                // This name will be shown in the final output
                displayName.set("JVM")

                // Platform used for code analysis. See the "Platforms" section of this readme
                platform.set(org.jetbrains.dokka.Platform.jvm)
                // Used for linking
                // to JDK documentation
                jdkVersion.set(8)
                sourceLink {
                    // Unix based directory relative path to the root of the project (where you execute gradle respectively).
                    localDirectory.set(file("com/secoo/coobox/library"))

                    // URL showing where the source code can be accessed through the web browser
                    remoteUrl.set(new URL(
                            "https://github.com/cy6erGn0m/vertx3-lang-kotlin/blob/master/src/main/kotlin"))
                    // Suffix which is used to append the line number to the URL. Use #L for GitHub
                    remoteLineSuffix.set("#L")
                }

                // List of files or directories containing sample code (referenced with @sample tags)
                samples.from("$rootDir/library/src/androidTest/java/com/secoo/coobox/library/samples/")
                // Disable linking to online kotlin-stdlib documentation
                noStdlibLink.set(true)

                // Disable linking to online JDK documentation
                noJdkLink.set(false)

                // Disable linking to online Android documentation (only applicable for Android projects)
                noAndroidSdkLink.set(true)

            }
        }
    }

}



dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation "androidx.activity:activity-ktx:1.0.0"
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation "com.squareup.okhttp3:okhttp:3.10.0"
    // https://mvnrepository.com/artifact/commons-io/commons-io
    implementation group: 'commons-io', name: 'commons-io', version: '2.6'
    implementation 'com.google.code.gson:gson:2.8.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

}